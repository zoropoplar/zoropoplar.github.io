(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{315:function(t,_,a){"use strict";a.r(_);var r=a(14),v=Object(r.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"frontmatter-title"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#_1-基本概念"}},[t._v("1. 基本概念")]),_("ul",[_("li",[_("a",{attrs:{href:"#_1-1-什么是数据结构"}},[t._v("1.1 什么是数据结构？")])]),_("li",[_("a",{attrs:{href:"#_1-2-什么是算法"}},[t._v("1.2 什么是算法？")])]),_("li",[_("a",{attrs:{href:"#_1-3-算法的复杂度"}},[t._v("1.3 算法的复杂度")])])])]),_("li",[_("a",{attrs:{href:"#_2-常见的数据结构"}},[t._v("2. 常见的数据结构")]),_("ul",[_("li",[_("a",{attrs:{href:"#_2-1-线性结构"}},[t._v("2.1 线性结构")])]),_("li",[_("a",{attrs:{href:"#_2-2-逻辑结构"}},[t._v("2.2 逻辑结构")])])])]),_("li",[_("a",{attrs:{href:"#_3-经典算法"}},[t._v("3. 经典算法")]),_("ul",[_("li",[_("a",{attrs:{href:"#_3-1-查找算法"}},[t._v("3.1 查找算法")])]),_("li",[_("a",{attrs:{href:"#_3-2-排序算法"}},[t._v("3.2 排序算法")])])])])])]),_("p"),t._v(" "),_("h2",{attrs:{id:"_1-基本概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[t._v("#")]),t._v(" 1. 基本概念")]),t._v(" "),_("h3",{attrs:{id:"_1-1-什么是数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是数据结构"}},[t._v("#")]),t._v(" 1.1 什么是数据结构？")]),t._v(" "),_("p",[t._v("数据结构（Data structure），存储数据的不同方式。")]),t._v(" "),_("h3",{attrs:{id:"_1-2-什么是算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是算法"}},[t._v("#")]),t._v(" 1.2 什么是算法？")]),t._v(" "),_("p",[t._v("算法（Algorithm），同一问题的不同解决方法，算法往往是针对特定数据结构的。")]),t._v(" "),_("h3",{attrs:{id:"_1-3-算法的复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-算法的复杂度"}},[t._v("#")]),t._v(" 1.3 算法的复杂度")]),t._v(" "),_("p",[t._v("算法的复杂度分为时间复杂度、空间复杂度。\n通常使用 "),_("code",[t._v("Big O")]),t._v(" 表示法来描述算法的复杂度。")]),t._v(" "),_("h2",{attrs:{id:"_2-常见的数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见的数据结构"}},[t._v("#")]),t._v(" 2. 常见的数据结构")]),t._v(" "),_("p",[t._v("常见的数据结构大致可分为线性结构和逻辑结构。")]),t._v(" "),_("h3",{attrs:{id:"_2-1-线性结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线性结构"}},[t._v("#")]),t._v(" 2.1 线性结构")]),t._v(" "),_("ul",[_("li",[t._v("数组")]),t._v(" "),_("li",[t._v("链表")]),t._v(" "),_("li",[t._v("哈希表/散列表")]),t._v(" "),_("li",[t._v("栈")]),t._v(" "),_("li",[t._v("队列")])]),t._v(" "),_("h3",{attrs:{id:"_2-2-逻辑结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-逻辑结构"}},[t._v("#")]),t._v(" 2.2 逻辑结构")]),t._v(" "),_("ul",[_("li",[t._v("树\n"),_("ul",[_("li",[t._v("二叉查找树（BST）")]),t._v(" "),_("li",[t._v("平衡二叉树（AVL）")]),t._v(" "),_("li",[t._v("红黑树（R-B Tree）")]),t._v(" "),_("li",[t._v("哈夫曼树（Huffman Tree）")]),t._v(" "),_("li",[t._v("前缀树(Trie tree)")])])]),t._v(" "),_("li",[t._v("图\n"),_("ul",[_("li",[t._v("最小生成树")]),t._v(" "),_("li",[t._v("最短路径")]),t._v(" "),_("li",[t._v("拓扑排序")])])])]),t._v(" "),_("h2",{attrs:{id:"_3-经典算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-经典算法"}},[t._v("#")]),t._v(" 3. 经典算法")]),t._v(" "),_("h3",{attrs:{id:"_3-1-查找算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-查找算法"}},[t._v("#")]),t._v(" 3.1 查找算法")]),t._v(" "),_("ul",[_("li",[t._v("顺序查找算法")]),t._v(" "),_("li",[t._v("二分查找算法")]),t._v(" "),_("li",[t._v("插值查找算法")]),t._v(" "),_("li",[t._v("斐波拉契查找算法")]),t._v(" "),_("li",[t._v("哈希查找算法")]),t._v(" "),_("li",[t._v("树表查找算法")]),t._v(" "),_("li",[t._v("分块查找算法")])]),t._v(" "),_("h3",{attrs:{id:"_3-2-排序算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-排序算法"}},[t._v("#")]),t._v(" 3.2 排序算法")]),t._v(" "),_("ul",[_("li",[_("RouterLink",{attrs:{to:"/helloworld/data-structure-and-algorithm/sort-selection.html"}},[t._v("选择排序")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/helloworld/data-structure-and-algorithm/sort-bubble.html"}},[t._v("冒泡排序")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/helloworld/data-structure-and-algorithm/sort-insertion.html"}},[t._v("插入排序")])],1),t._v(" "),_("li",[t._v("堆排序")]),t._v(" "),_("li",[t._v("希尔排序")]),t._v(" "),_("li",[t._v("归并排序")]),t._v(" "),_("li",[t._v("快速排序")]),t._v(" "),_("li",[t._v("桶排序")]),t._v(" "),_("li",[t._v("计数排序")]),t._v(" "),_("li",[t._v("基数排序")])])])}),[],!1,null,null,null);_.default=v.exports}}]);